<div class="container gray">

    <!-- Main component for a primary marketing message or call to action -->
    <ol class="breadcrumb gray">
        <li class="active"><strong>Bots</strong>
        </li>
    </ol>
    <table class="table table-bordered table-hover text-center">
        <thead>
            <tr>
                <td class="col-md-1"><strong>#</strong></td>
                <td class="col-md-1"><strong>Character Name</strong></td>
                <td class="col-md-3"><strong>Health</strong></td>
                <td class="col-md-3"><strong>Mana</strong></td>
                <td class="col-md-1"><strong>Level</strong></td>
                <td class="col-md-2"><strong>Experience</strong></td>
                <td class="col-md-1"><strong>More Info</strong></td>
            </tr>
        </thead>
        <tbody id="botTableBody">
        </tbody>
    </table>
</div>

<script>
    var socket = io();
    var storage = { };

    var profit = 0;
    socket.on(getUrlVars()["characterName"], function(data){
        console.log(data);
        console.log("?XDD");
        //document.body.innerHTML = JSON.stringify(data, null, 4)
        document.getElementById("mana").style.width = data["percent_mana"]+"%";
        document.getElementById("mana").innerHTML = Math.floor(data["percent_mana"])+"%";
    });

    socket.emit("giveMeAllData");

    socket.on("getWholeInfo", function(data) {
        console.log(data);
        $("#botTableBody").text("");
        makeTable(data);
        storage = data;
    })

    socket.on("updatedPlayerData", function(data) {
        updateTable(data);
    });

    function makeTable(data) {
        var index = 1;

        for (var key in data) {
            var charNameWithoutSpaces = (data[key].characterName).replace(/ /g, '');
            var html = `
                <tr id=`+charNameWithoutSpaces+`>
                    <td class="vert-align index">` + index + `</td>
                    <td class="vert-align name">0</td>
                    <td class="vert-align">
                        <div class="progress">
                            <div class="progress-bar progress-bar-danger" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                                <span></span>
                            </div>
                        </div>
                    </td>
                    <td class="vert-align">
                        <div class="progress">
                            <div class="progress-bar progress-bar-default" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                                <span></span>
                            </div>
                        </div>
                    </td>
                    <td class="vert-align level">0</td>
                    <td class="vert-align">
                        <div class="progress">
                            <div class="progress-bar progress-bar-warning" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                                <span></span>
                            </div>
                        </div>
                    </td>
                    <td class="vert-align">
                        <a href="#" type="submit" class="btn btn-default">More</a>
                    </td>
                </tr>`;
            $("#botTableBody").append(html);

            index++;
        }


        updateTable(data);
    }


    var lastUpdated = [];
    function updateTable(data) {
        for (var key in data) {
            var charNameWithoutSpaces = (data[key].characterName).replace(/ /g, '');
            var _tr = "tr#" + charNameWithoutSpaces;
            var progressBase = _tr + " td.vert-align div.progress";

            var currentHealth = (data[key].current_health || 0)
            var maxHelth = (data[key].max_health || 0)
            var healthPercent = Math.floor((data[key].current_health / data[key].max_health)*100 || 0);
            $(progressBase + " div.progress-bar-danger").css("width", healthPercent + "%");
            $(progressBase + " div.progress-bar-danger span").text(currentHealth + "/" + maxHelth + " (" + healthPercent + "%)");


            var currentMana = (data[key].current_mana || 0)
            var maxMana = (data[key].max_mana || 0)
            var manaPercent = Math.floor((data[key].current_mana / data[key].max_mana)*100 || 0);
            $(progressBase + " div.progress-bar-default").css("width", manaPercent + "%");
            $(progressBase + " div.progress-bar-default span").text(currentMana + "/" + maxMana + " (" + manaPercent + "%)");

            var currentLevel = data[key].current_level || "unknown";
            $(_tr + " .level").text(currentLevel);

            var percentExperience = (data[key].percent_experience || 0);
            $(progressBase + " div.progress-bar-warning").css("width", percentExperience+ "%");
            $(progressBase + " div.progress-bar-warning span").text(percentExperience + "%");

            var characterName = data[key].characterName || "";
            $(_tr + " td.vert-align a").attr("href", "/selectedBot?name=" + characterName);

            lastUpdated[data[key].characterName] = data[key].is_connection_alive;
        }
    }


    setInterval(function() {
        for (key in lastUpdated) {
            var charNameWithoutSpaces = (key).replace(/ /g, '');
            var statement = Math.floor(Date.now() / 1000) - lastUpdated[key] > 2 ? "red" : "green";
            $("tr#" + charNameWithoutSpaces + " .name").css("color", statement);
            $("tr#" + charNameWithoutSpaces + " .name").text(key || "NO NAME");
        }
    }, 100)

    function getUrlVars() {
        var vars = [], hash;
        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');

        for(var i = 0; i < hashes.length; i++) {
            hash = hashes[i].split('=');
            hash[1] = unescape(hash[1]);
            vars.push(hash[0]);
            vars[hash[0]] = hash[1];
        }

        return vars;
    }
</script>